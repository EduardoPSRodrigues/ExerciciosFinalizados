/* Colocarei a fonte sem Serifa, então ao vincular o texto com a tag HTML, todo o texto
será padronizado. Posso colocar na tag do BODY, pois tanto o HTML quanto o BODY estão
abraçando todo o conteúdo.
Existem uma terceira maneira que é vincular a fonte na raiz do arquivo, nesse caso
usa :root */

html{
    font-family: sans-serif;
    font-size: 16px;
}

/* Irei resetar as margens do HTML, sendo que a Margin, Border e Padding é exclusiva do 
elemento que estamos selecionando. Logo, não ocorre a cascata dos elementos. Não é 
interessante usar o asterisco (*), pois ele vai resetar todos os elementos, e tem 
elementos que desejo manter o estilo */

/* box-sizing: content-box - Ela soma o meu conteúdo com o PADDING e a BORDA
box-sizing: border-box - Quando eu defino que a largura da minha caixa será de 100px
e coloco um PADDING de 10, então ele diminiu o contéudo para fechar em 100px.
O border-box possibilita um maior controle do tamanho. */

html, body, div, header, footer, main, p, span, h1, h2, h3, h4, h5, h6, a, form
ul, ol, li{
    margin: 0;
    border: 0;
    padding: 0;
    box-sizing: border-box;
}

/* A altura mínima do meu HTML e do BODY será de 100 do meu view port, podendo ser maior
de acordo com o conteúdo */

html, body{
    width: 99vw;
    min-height: 99vh;
}

/* Criando um flexbox - Estou selecionando o HEADER, MAIN E FOOTER
Por padrão é flex-direction: row (linha)*/
#page-container{
min-height: 100vh;
display: flex;
flex-direction: column;
}

/* Tanto o cabeçalho quanto o rodapé possuem estilos em comum. A vírgula é para
selecionar as duas tags. Primeiro, alterei a cor, segundo o transformei em flex, ou 
seja, todos os filhos diretos de header e footer eles serão um flex container 

Quando um flex box é row (linha), justify-content alinha horizontalmente e allig
itens alinha verticalmente

Quando um Quando um flex box é column (coluna), justify-content alinha verticalmente e allig
itens alinha horizontalmente*/

header, footer{
background-color: navy;
color: white;
display: flex;
justify-content: space-between;
align-items: center;
}

/* Para o logotipo do cabeçalho e do rodapé foi esetabelecido que o tamanho será
30% maior que o texto pré-estabelecido na raiz que o UPPERCASE significa que 
o texto será maiusculo */
.logo-text{
    font-size: 1.3rem;
    text-transform: uppercase;
    font-weight: bold;
}

/* Tamanho do texto do rodapé */
footer > p {
    font-size: 0.8rem;
}

/* Flex-grow: 1 - Significa que todos os elementos da minha flex box terão o mesmo 
tamanho 
Nesse caso, significa que estou dando um tamanho maior para o MAIN e um menor para o 
HEADER e FOOTER
main{flex-grow: 2;}
header, footer{flex-grow: 1;} 

Caso eu quero que apenas um elemento cresça, eu coloco flex-grow: 1 em apenas um 
elemento e automaticamente ele irá apertar os outros elementos na tela.

flex: e flex-grow são sinônimos.*/

/* Converti o MAIN em um flexbox, mudei a direção para COLUNA, centralizei os ITENS
e o CONTEÚDO e darei um espaço entre eles usando o GAP */
main{
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 32px;
}

/* Padding é o preenchimento, é o espaço entre a borda e o conteúdo */
main, header, footer{
    padding: 16px;
}

/* Todo filho direto de NAV terá uma cor branco. Irei tirar o sublinado das palavras
então usarei o text-decoration */
nav > a{
    color: white;
    text-decoration: none;
}

/* Quando colocar o mouse em cima da palavra, a palavra ficará sublinhada.
Essa pseudo classe é usada como apontador */
nav > a:hover{
    text-decoration: underline;
}

/* Transformei o NAV em um display flex e coloquei um espaço entre os itens */
nav{
    display: flex;
    gap: 16px;
}

/* Estou resetando a formatação da lista (tirando o ponto na frente do item)
Convertendo em flexbox, mudando a direção, justificando o conteudo, sendo que o 
space-around fica sempre o meio com o dobro do tamanho e o space-evenly fica tudo igual
de distanciamento 

Quando a tela é muito pequena é possível fazer os cartões irem para baixo com a função
flex-wrap: wrap

Configurando o bloco com a imagem, texto e button*/
#cards-container{
    width: 100%;
    list-style: none;
    display: flex;
    flex-direction: row;
    justify-content: space-evenly;
    gap: 16px;
    flex-wrap: wrap;
}

/* border-radius é a curvinha da borda
 border-style: solid faz a linha da borda aparecer, sem isso não tem borda
 Poderia escrever quase tudo em 1 linha
 border: 1px solid navy;
 Padding é para dar um espaçamento entre a borda e o conteúdo*/
#cards-container > li{
   border-width: 1px;
   border-style: solid;
   border-color: navy; 
   border-radius: 16px;
   display: flex;
   flex-direction: column;
   padding: 8px;
   gap: 8px;
}

/* aspect-ratio: 3/4 - Propriedade que dimensiona o tamanho da altura e da largura */
#cards-container > li > img{
    width: 320px;
    display: block;
    aspect-ratio: 4/3;
    background-color: gray;
    border-radius: 8px;
}

#cards-container > li > h3{
    font-size: 1.2rem;
    font-weight: normal;
    font-style: italic;
    color: navy;
}

#cards-container > li > .card-details{
    display: flex;
    justify-content: space-between;
    gap: 8px;
}

#cards-container > li > .card-details > .price > h4{
font-size: 0.8rem;
font-weight: normal;
}

#cards-container > li > .card-details > .price > p{
font-size: 1.2rem;
font-weight: bold;
}

#cards-container > li > .card-details > .price {
display: flex;
flex-direction: column;
gap: 4px;
}

#cards-container > li > .card-details > a{
background-color: red;
color: white;
padding: 12px;
border-radius: 8px;
text-decoration: none;
display: flex;
justify-content: center;
align-items: center;
}

/* Configurando o FORM 
Definir uma largura para o FORM senão o flex-grow não irá funcionar
Inseriu uma largura de 1500, sendo que a largura máxima será determinada pelo 
viewport do navegador com uma função de cálculo
*/

form{
    display: flex;
    width: 1450px;
    max-width: calc(100vw - 64px);
    padding: 32px;
    gap: 16px;
    color: navy;
    font-weight: bold;
    align-items: center;
    flex-wrap: wrap;
    justify-content: center;
}

/* Tamanho das caixinhas do FORM */
form input{
padding: 8px;
border-radius: 8px;
border-color: gray;
}

form input[type="text"] {
flex-grow: 1;
color: #8a90bf;
}

form input[type="date"] {
flex-grow: 0.2;
color: navy;
font-size: 1.2rem;
text-align: center;
font-weight: bold;
}

form button[type="submit"]{
background-color: red;
color: white;
padding: 8px 16px;
border-radius: 8px;
text-decoration: none;
display: flex;
justify-content: center;
align-items: center;
flex-grow: 0.5;
}